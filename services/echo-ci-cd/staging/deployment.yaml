apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-ci-cd--staging
spec:
  selector:
    matchLabels:
      app: echo-ci-cd--staging
  replicas: 1
  template:
    metadata:
      labels:
        app: echo-ci-cd--staging
      annotations:
        consul.hashicorp.com/connect-inject: 'true'
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-pre-populate-only: 'true'
        vault.hashicorp.com/agent-inject-secret-echo-ci-cd--staging: 'secret/data/echo-ci-cd/staging'
        vault.hashicorp.com/agent-inject-template-echo-ci-cd--staging: |
          {{- with secret "secret/data/echo-ci-cd/staging" -}}
          {{- range $k, $v := .Data.data -}}
          {{ $k }}={{ $v }}
          {{ end }}
          {{- end -}}
        # vault.hashicorp.com/secret-volume-path-echo-ci-cd--staging: '/app/.env'
        vault.hashicorp.com/agent-inject-file-echo-ci-cd--staging: '.env'
        vault.hashicorp.com/role: 'echo-ci-cd--staging'
    spec:
      serviceAccountName: echo-ci-cd--staging
      containers:
      - name: echo-ci-cd--staging
        image: efishery.azurecr.io/echo-ci-cd--staging:20
        command: ['/bin/sh']
        args: ['-c', 'set -o allexport && source /vault/secrets/.env && set +o allexport && ./echo-ci-cd']
        env:
        - name: VAULT_ADDR
          value: 'http://vault.vault:8200'
        ports:
        - containerPort: 8080